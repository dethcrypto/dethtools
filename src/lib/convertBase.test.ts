import { expect } from 'earljs';

import { convertBase } from './convertBase';

describe(convertBase.name, () => {
  it('converts binary format', () => {
    expect(
      convertBase(
        '100000001011010000001000000010110100000010101000011010000001000000010110100000010101000010000011111110000011010100000101000000100000001011010000000100000010000000101101000000000100000010000000101101000000',
        'binary',
        'binary',
      ),
    ).toEqual(
      '100000001011010000001000000010110100000010101000011010000001000000010110100000010101000010000011111110000011010100000101000000100000001011010000000100000010000000101101000000000100000010000000101101000000',
    );
    expect(
      convertBase(
        '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
        'binary',
        'octal',
      ),
    ).toEqual('040000000000000000000000000000000000000000000000000');
    expect(
      convertBase(
        '100000001011010000001000000010110100000010101000011010000001000000010110100000010101000010000011111110000011010100000101000000100000001011010000000100000010000000101101000000000100000010000000101101000000',
        'binary',
        'decimal',
      ),
    ).toEqual('12926134075920727636302982350177090457457998788034925005638464');
    expect(
      convertBase(
        '100010101010101111111111111111010101010111111111111111101010101011111111111111110101010101111111111111111',
        'binary',
        'hexadecimal',
      ),
    ).toEqual(expect.stringMatching(/0x11557FFFAABFFFD55FFFEAAFFFF/i));
  });

  it('converts decimal format', () => {
    expect(
      convertBase(
        '122.9999999999999999999999999999999999999999999999999999999999000000000001',
        'decimal',
        'binary',
      ),
    ).toEqual(

    );
    expect(
      convertBase(
        '991213123874903250853278399121312387490325080989888843219798419175239825378532783000000841917523982537853278300000084191752398253785327830000008419175239825378532783000000',
        'decimal',
        'octal',
      ),
    ).toEqual(
      '02032451277354503517050671117710665174541362015355755433271161163735017771002766626163316202665376213112150604707401405604661247057377575022164344535612415350312622001401736106151250437704700',
    );
  });
});
